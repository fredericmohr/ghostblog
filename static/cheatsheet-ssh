<!DOCTYPE html>
<html>
<head>
    <title>HashtagSecurity</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="wot-verification" content="06cd687a47e37736daed"/> 
    <link rel="stylesheet" type="text/css" href="assets/css/mofirst-min.css?v=8ff1f2e80d"/>
    <script type="text/javascript" src="https://code.jquery.com/jquery-latest.min.js"></script> <!-- disqus loader needs latest jquery -->
    <meta charset="utf-8">
    <link rel="shortcut icon" href="favicon.ico" type="image/x-icon" />
    <link rel="canonical" href="cheatsheet-ssh" />
    <meta name="referrer" content="no-referrer-when-downgrade" />
    
    <meta property="og:site_name" content="HashtagSecurity" />
    <meta property="og:type" content="website" />
    <meta property="og:title" content="CheatSheet - SSH" />
    <meta property="og:description" content="Fun with SSH Back to Index A collection of SSH commands and techniques I regularly need but more often can&#x27;t fully remember. SSH Tunneling to access services on 127.0.0.1 SSH Reverse Tunnel to access ssh-server on a local device Tunneling local services through reverse tunnels. Way Easier:" />
    <meta property="og:url" content="http://localhost:2373/cheatsheet-ssh/" />
    <meta name="twitter:card" content="summary" />
    <meta name="twitter:title" content="CheatSheet - SSH" />
    <meta name="twitter:description" content="Fun with SSH Back to Index A collection of SSH commands and techniques I regularly need but more often can&#x27;t fully remember. SSH Tunneling to access services on 127.0.0.1 SSH Reverse Tunnel to access ssh-server on a local device Tunneling local services through reverse tunnels. Way Easier:" />
    <meta name="twitter:url" content="http://localhost:2373/cheatsheet-ssh/" />
    <meta name="twitter:label1" content="Written by" />
    <meta name="twitter:data1" content="Frederic Mohr" />
    
    <script type="application/ld+json">
{
    "@context": "https://schema.org",
    "@type": "Article",
    "publisher": {
        "@type": "Organization",
        "name": "HashtagSecurity",
        "logo": {
            "@type": "ImageObject",
            "url": "http://localhost:2373/content/images/2014/Oct/tw-logo_400x400-1.png",
            "width": 60,
            "height": 60
        }
    },
    "author": {
        "@type": "Person",
        "name": "Frederic Mohr",
        "sameAs": []
    },
    "headline": "CheatSheet - SSH",
    "url": "http://localhost:2373/cheatsheet-ssh/",
    "description": "Fun with SSH Back to Index A collection of SSH commands and techniques I regularly need but more often can&#x27;t fully remember. SSH Tunneling to access services on 127.0.0.1 SSH Reverse Tunnel to access ssh-server on a local device Tunneling local services through reverse tunnels. Way Easier:",
    "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": "http://localhost:2373/"
    }
}
    </script>

    <script src="public/ghost-sdk.min.js?v=8ff1f2e80d"></script>
<script>
ghost.init({
	clientId: "ghost-frontend",
	clientSecret: "5a567477c5aa"
});
</script>
    <meta name="generator" content="Ghost 2.23" />
    <link rel="alternate" type="application/rss+xml" title="HashtagSecurity" href="rss/index.html" />
</head>
<body>
<!--NAVIGATION-->
<div class="nav_bar">
	<div class="nav_container">	
		<ul class="nav">
			<li id="nav-index"><a href="index.html" class="icon-home"></a></li>
			<li id="nav-kalibook"><a href="getting-started-with-kali-linux/index.html" class="icon-book"></a></li>
			<li id="nav-about"><a href="about/index.html" class="icon-info"></a></li>
		</ul>

		<!-- Follow Me -->
		<div class="follow_me">
			<a href="https://twitter.com/HashtagSecurity" title="Twitter"><img alt="twitter" src="assets/images/twi.png?v=8ff1f2e80d"></a>
			<a href="https://www.hashtagsecurity.com/rss" title="RSS"><img alt="rss" src="assets/images/rss.png?v=8ff1f2e80d"></a>
		</div>
	</div>
</div>
<div class="navline"></div>
<!-- End Header -->
<div class="outer_container">
	<!-- PAGE -->
	<div class="page_container">
		<!-- CONTENT -->
		<div class="post_container">
			    <article class="post page">


        <h1 class="post-title">CheatSheet - SSH</h1>
		<span class="post-meta"><a href="http://de.linkedin.com/in/fredericmohr"><b>Frederic Mohr</b></a> - <time datetime="2014-11-15">15 Nov 2014</time> </span>

        <section class="post-content">
            <!--kg-card-begin: markdown--><!--kg-card-begin: markdown--><h1><a NAME=02_ssh>Fun with SSH</a></b>
<span style="font-size:small;"><a href="cheatsheet-ssh#topics" style="float: right;">Back to Index</a></span></h1>
A collection of SSH commands and techniques I regularly need but more often can't fully remember.
<ul>
<li><a href="cheatsheet-ssh#02_01_tunnel">SSH Tunneling to access services on 127.0.0.1</a></li>
<li><a href="cheatsheet-ssh#02_02_rtunnel">SSH Reverse Tunnel to access ssh-server on a local device</a></li>
<li><a href="cheatsheet-ssh#02_03_srv-tunnel">Tunneling local services through reverse tunnels.</a></li>
<li><a href="cheatsheet-ssh#02_04_multi-hop-fwd">Way Easier: Multi-Hop Port Forwarding</a></li>
<li><a href="cheatsheet-ssh#02_05_no-host-chk">Ignore SSH Host Key Checking</a></li>
</ul>
<p><b><a NAME=02_01_tunnel>SSH Tunneling to access services on 127.0.0.1</a></b></p>
<pre><code>ssh -L tmpport:lanserver:targetport user@dmzserver
firefox: https://localhost:tmpport

ssh -L 8022:fmo-dev01.l3muc.inside:443 root@infra01.l3muc-b.cxo.name
firefox: https://localhost:8022

#OpenVAS running on fmohr-kali on 127.0.0.1:9392
ssh -L 9392:127.0.0.1:9392 root@172.18.140.247
#Arachni running on fmohr-kali on 127.0.0.1:9292
ssh -L 9292:127.0.0.1:9292 root@172.18.140.247
</code></pre>
<p><b><a NAME=02_02_rtunnel>SSH Reverse Tunnel to access ssh-server on a local device</a></b></p>
<pre><code>#locsrv = local ssh-server and end target (where you want to go)
#pubsrv = server with public ip address (or dyndns, needed as middleman)
#client = your client machine from which you are trying to access local

#Prerequesites: openssh-server running onr locsrv and pubsrv
user@locsrv: ssh -R optional:2222:localhost:22 user@pubsrv
#Explanation: ssh -R(everse) pubsrv-ip:pubsrv-port:locsrv-ip:locsrv-port 
#If you leave pubsrv-ip out, as in the example above, 
#it will automatically use localhost.

#Result:
user@client: ssh root@pubsrv
user@pubsrv: netstat
	127.0.0.1 2222 	Listen ssh	#SSH Reverse Tunnel
    127.0.0.1 22	Listen ssh	#Normal SSH Server
user@pubsrv: ssh 127.0.0.1 -p 2222
user@locsrv: 
</code></pre>
<p>Unfortunately, i wasn't yet able to bind the reverse tunnel on pubsrv to the public ip address. The goal would be to do the following.</p>
<pre><code>user@client: ssh user@pubsrv -p 2222
# hidden redirect through reverse tunnel by pubsrv...
user@locserv: 
</code></pre>
<p><b><a NAME=02_03_srv-tunnel>Tunneling local services through reverse tunnels.</a></b><br>
To get access to webinterfaces running on locsrv, the following is needed:</p>
<pre><code>#Arachni running on locsrv 127.0.0.1:9292
user@pubsrv: screen -S arachni_sshtunnel 
user@pubsrv: ssh -L 8881:127.0.0.1:9292 root@127.0.0.1 -p 2222

#OpenVAS running on locsrv 127.0.0.1:9392
user@pubsrv: screen -S openvas_sshtunnel 
user@pubsrv:  ssh -L 9991:127.0.0.1:9392 root@127.0.0.1 -p 2222

#Create Tunnel to pubsrv, to connect to tunnel to locsrv (there's gotta be a better way...)
user@client: screen -S arachni_sshtunnel 
user@client: ssh -L 8882:127.0.0.1:8881 root@pubsrv

#OpenVAS running on locsrv 127.0.0.1:9392
user@client: screen -S openvas_sshtunnel 
user@client: ssh -L 9992:127.0.0.1:9991 root@pubsrv
</code></pre>
<p>To make things more clearly, I used a different port for every stage. The target (locsrv) has arachni running on 9292 and openvas on 9392. On our server in the middle (pubsrv) I chose to bind arachni to localhost:8881 and openvas to localhost:9991. On the client, we need to bind to the services on pubsrv, since they are the one accessible to us. Therefore we need to connect to 8881 and 9991 and can bind them locally to wherever we want (above port 1023), e.g. 8882 and 9992.</p>
<p>To access these, fire up your browser of choice and go to <a href="https://localhost:8881">https://localhost:8881</a> and <a href="https://localhost:9992">https://localhost:9992</a>. You should get a connection to arachni and openvas.</p>
<p><b><a NAME=02_04_multi-hop-fwd>Way Easier: Multi-Hop Port Forwarding</a></b></p>
<p>Same as above, trying to  reach port 9292 (arachni) on locsrv by forwarding the port through a reverse ssh tunnel between locsrv and pubsrv, to access it from client.</p>
<pre><code>ssh -t -t -L {client:}9292:pubsrv:9292 user@pubsrv ssh -N -L {pubsrv:}9292:locsrv:9292 root@127.0.0.1 -p 2222
</code></pre>
<p><code>-L</code> is always <code>source:sourceport:target:targetport</code>, so the first request is coming from <code>client:clientport</code> to <code>pubsrv:pubsrvport</code> and the second is coming from <code>pubsrv:pubsrvport</code> to <code>locsrv:locsrvport</code>. If the first ip is not specified (like this: <code>-L sourceport:target:targetport</code>), then 127.0.0.1 will be automatically used.</p>
<pre><code>ssh -t -t -L 9292:localhost:9292 root@mohrphium.de ssh -N -L 9292:localhost:9292 root@127.0.0.1 -p 2222

-t -t 	force ssh to use virtual tty
-N 		Don't execute commands - if you just want port-forwarding
-L		Bind to local interfaces/ports
</code></pre>
<p>Or for multiple hosts, use:</p>
<pre><code>ssh -t -t -L 9292:localhost:9292 -L 9392:localhost:9392 root@mohrphium.de ssh -N -L 9292:localhost:9292 -L 9392:localhost:9392 127.0.0.1 -p 2222
</code></pre>
<p><b><a NAME=02_05_no-host-chk>Ignore SSH Host Key Checking </a></b><br>
If you want to ignore a wrong ssh-server fingerprint (only if you know why it's wrong!!!) you can do that without removing it from the known_hosts file with:</p>
<pre><code>ssh -o StrictHostKeychecking=no -o UserKnownHostsFile=/dev/null 127.0.0.1 -p 2222
</code></pre>
<hr>
<!--kg-card-end: markdown--><!--kg-card-end: markdown-->
        </section>


</article>

		</div>

		<!-- SIDEBAR -->
		<div class="side_container">

			<div class="side_sub_one well">
				<b>Note</b>
				<div class="side_sub_hl_blue"></div>
				<p>All information provided on this site is for educational purposes only. The site and it's author is in no way responsible for any misuse of the information.</p>
			</div>
			<div class="side_sub_one well">
				<b>Links</b>
				<div class="side_sub_hl_blue"></div>
				<p>
				<a href="random-notes/index.html">Random Notes and CheatSheets</a><br>
				<hr>
				<a href="http://learnpythonthehardway.org/book/">Python the hard way</a><br>
				<a href="http://cspplayground.com">CSP Playground</a><br>
				<a href="http://www.offensive-security.com/metasploit-unleashed/Main_Page">Metasploit Unleashed</a><br>
				<hr>
				<a href="https://www.linkedin.com/profile/view?id=203397467">Me - LinkedIn</a><br>
				<a href="https://ctftime.org/team/9072">Me - CTFTime.org</a><br>
				</p>
			</div>		
			<div class="side_sub_one well">
				<b>Blogs</b>
				<div class="side_sub_hl_blue"></div>
				<p>
				<a href="http://wearetheartillery.blogspot.com.es/">WeAreTheArtillery</a><br>
				<a href="https://www.imperialviolet.org">Imperial Violet</a><br>
				<a href="http://www.nerd-supreme.de">NerdSupreme (DE)</a><br>
				<a href="http://krebsonsecurity.com/">KrebsOnSecurity</a><br>
				<a href="https://www.corelan.be/">Corelan Team</a><br>
				<a href="http://blog.g0tmi1k.com/">G0tmi1k</a><br>
				</p>
			</div>		
			<div class="side_sub_one well">
				<b>Reddits</b>
				<div class="side_sub_hl_blue"></div>
				<p>
				<a href="http://www.reddit.com/r/netsec/">/r/netsec</a><br>
				<a href="http://www.reddit.com/r/Python/">/r/Python</a><br>
				<a href="http://www.reddit.com/r/Defcon/">/r/Defcon</a><br>
				<a href="http://www.reddit.com/r/securityCTF/">/r/securityCTF</a><br>
				<a href="cheatsheet-ssh"></a><br>
				</p>
			</div>		
		</div>
	</div> <!-- End of Sidebar -->
</div>
	<div class="footer">
	<div class=navline></div>
		HashtagSecurity<br><small>... keeping security in mind.<br><a href="impressum">Impressum</a> | <a href="datenschutzerklarung">Datenschutzerklärung</a> | <a href="privacy-policy">Privacy Policy</a></small>
	</div>
</body>
</html>
